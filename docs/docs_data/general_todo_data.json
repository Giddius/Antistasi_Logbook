[
    {
        "identifier": "TODO",
        "category": "refactoring",
        "text": "simplify and check each piece of code that is threading related!"
    },
    {
        "identifier": "TODO",
        "category": "formatting",
        "text": "Go through all classes and change the visual order of the methods and properties to be consistent and make sense."
    },
    {
        "identifier": "idea",
        "category": "feature",
        "text": "Create AAR-Animation via $CLASS->ChangingSidesRecord$ entries for a certain 'Campaign_id' and have it play back by painting the locations with user controlled replay speed."
    },
    {
        "identifier": "idea",
        "category": "performance",
        "text": "Make $CLASSMETHOD->LogFile.amount_log_records:-:amount_log_records$, $CLASSMETHOD->LogFile.amount_warnings:-:amount_warnings$ and $CLASSMETHOD->LogFile.amount_errors:-:amount_errors$ of $CLASS->LogFile$ and actual DB column and not a calculated Property. Maybe via Trigger or Table-function, better via the normal $CLASS->Updater:-:update-mechanism$"
    },

    {
        "identifier": "TODO",
        "category": "bug",
        "text": "make it so that generic `Error in Expression` gets fully parsed including the file and line number into a single record"
    }
]
